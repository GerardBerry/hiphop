#!/bin/bash

space="     "
dir=$(pwd)
hop=/usr/local/bin/hop
hop_opt="--no-server"
batch=/tmp/batch.js
CC=/usr/bin/gcc
output_hop=/tmp/TEST-HOPJS.out

run_kernel_test() {
    i=$((i + 1))

    echo -n "$i. $file ... "

    cat <<EOF > $batch
"use hopscript"
var batch = require("$dir/../lib/batch-interpreter.js");
try{example = require("$dir/$file.js"); /*global for eval_mode*/}
catch(e){console.log(e.message);process.exit(1)}
batch.interpreter(example.prg);
EOF

    $hop $hop_opt $batch < $file.in > $output_hop 2>&1
    diff_out=$(diff -Z $output_hop $file.out)

    if [ "$diff_out" != "" ]
    then
	echo -en "\e[31m\e[1mfailure\e[0m"
	failure=`expr $failure + 1`
    else
	echo -en "\e[32m\e[1mok\e[0m"
	success=`expr $success + 1`
    fi

    echo ".";
}

init_stats() {
    i=0
    success=0
    failure=0
}

print_stats() {
    echo -e "\e[1m$space*** $success success   $failure failure ***\e[0m"
}

if [ "$(dirname $0)" != "." ]
then
    echo "ERROR: The tests must be run inside test directory"
    exit 1
fi

clear

if [ "$1" != "" ]; then
    file=${1%.*}
    if [ -f $file.in ]; then
	echo -e "\e[1m$space*** DEBUG TEST FOR $file. ***"
	echo -e "$space*** TMP FILES WILL NOT BE REMOVED ***\e[0m"
	hop_opt+=" -g"
	run_kernel_test
	exit 0
    fi
fi

init_stats
echo -e "\e[1m$space*** HIPHOP.JS TESTS ***\e[0m"
for file in *.in
do
    file=${file%.*}
    run_kernel_test
done
print_stats

rm $batch
rm $output_hop
