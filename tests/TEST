#!/bin/bash

dir=$(pwd)
hop=/usr/local/bin/hop
js2esterel=/tmp/js2esterel.js
batch=/tmp/batch.js
CC=/usr/bin/gcc
output_hop=/tmp/TEST-HOPJS.out
output_est=/tmp/TEST-EST.out

batch_esterel() {
    $ESTEREL/bin/esterel -simul $file.strl -D /tmp/ \
    	&& $CC /tmp/$file.c $ESTEREL/lib/libcoresim.a \
    	       -o /tmp/$file \
	&& /tmp/$file \
    	&& rm /tmp/$file /tmp/$file.c
}

run_kernel_test() {
    i=$((i + 1))

    echo -n "$i. $file ... "

    cat <<EOF > $batch
var batch = require("$pwd/../batch-interpreter.js");
var example = require("$pwd/$file.js");
batch.interperter(prg);
EOF

    $hop -g --no-server $file.js < $file.in > $output_hop
    batch_esterel $file < $file.in > $output_est

    if [ "$(diff -Z $output_hop $output_est)" != "" ]
    then
	echo -en "\e[31m\e[1mfailure\e[0m"
	failure=`expr $failure + 1`
    else
	echo -en "\e[32m\e[1mok\e[0m"
	success=`expr $success + 1`
    fi

    echo ".";
}

run_js2esterel_test() {
    i=$((i + 1))

    echo -n "$i. $file ... "

    cat <<EOF > $js2esterel
var js2esterel = require("$pwd/../js2esterel.js");
var example = require("$pwd/$file.js");
console.log(example.prg.esterel_code());
EOF

    $hop -g --no-server $file.js < ${file%-js2esterel}.in > $output_hop

    if [ "$(diff -Z $output_hop $file.out)" != "" ]
    then
	echo -en "\e[31m\e[1mfailure\e[0m"
	failure=`expr $failure + 1`
    else
	echo -en "\e[32m\e[1mok\e[0m"
	success=`expr $success + 1`
    fi

    echo ".";
}

init_stats() {
    i=0
    success=0
    failure=0
}

print_stats() {
    echo "`expr $success + $failure` executed"
    echo "   $success success"
    echo "   $failure failure"
}

if [ -z $ESTEREL ]
then
    echo "ERROR: Esterel needs to be installed."
    exit 1
fi

if [ "$(dirname $0)" != "." ]
then
    echo "ERROR: The tests must be run inside test directory"
    exit 1
fi

init_stats
echo -e "\e[1mkernel tests...\e[0m"
for file in *.in
do
    file=${file%.*}
    run_kernel_test $file
done
print_stats

init_stats
echo -e "\n\e[1mjs2esterel tests...\e[0m"
for file in *-js2esterel.out
do
    file=${file%.*}
    run_js2esterel_test $file
done
print_stats
