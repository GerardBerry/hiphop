#* Generated file, don't edit
#*=====================================================================*/
#*    serrano/prgm/project/hiphop/hiphop/Makefile.in                   */
#*    -------------------------------------------------------------    */
#*    Author      :  Manuel Serrano                                    */
#*    Creation    :  Fri Jan 20 14:35:57 2006                          */
#*    Last change :  Mon May 25 16:24:50 2020 (serrano)                */
#*    Copyright   :  2006-20 Manuel Serrano                            */
#*    -------------------------------------------------------------    */
#*    Generic Makefile to build Hop weblets.                           */
#*=====================================================================*/
## run "make" to build the .hz file

#*---------------------------------------------------------------------*/
#*    Weblet description                                               */
#*---------------------------------------------------------------------*/
HZ=@HZ@
HZVERSION=@VERSION@
DATE="@DATE@"

CATEGORY=programming
LICENSE=@LICENSE@

LIBDIR=@LIBDIR@
HOPREPOSITORY=@HOPREPOSITORY@
HOPLIBDIR=@HOPLIBDIR@
HOPVERSION=@HOPVERSION@
HOPBUILDID=@HOPBUILDID@
HOPBUILDARCH=@HOPBUILDARCH@
HOPSODIR=@SODIR@

HIPHOPLIBDIR=$(LIBDIR)/$(HZ)/$(HZVERSION)

HOP = @HOP@
HOPC = @HOPC@
HFLAGS = @HFLAGS@

LIB = ast.js batch.js compiler.js compiler-utils.js debugger-common.js \
 debugger.js debugger-server.js debug.js error.js hiphop.js lang.js \
 machine.js net.js queue.js signal.js sweep.js

JSPREPROCESSOR = astutils.js parser.js
HOPPREPROCESSOR = _hhaccess.hop
PREPROCESSOR=$(JSPREPROCESSOR) $(HOPPREPROCESSOR)

ULIB = parallelmap.js

JSOBJECTS = $(LIB:%=lib/%) $(JSPREPROCESSOR:%=preprocessor/%) $(ULIB:%=ulib/%)
HOPOBJECTS = $(HOPPREPROCESSOR:%=preprocessor/%)
OBJECTS=$(JSOBJECTS) $(HOPOBJECTS)

SOFILES = $(JSOBJECTS:%.js=%.@SO@) $(HOPOBJECTS:%.hop=%.@SO@)

SODIR= @SODIR@
JSDIR = $(LIBDIR)/$(HZVERSION)

SO=$(SOFILES:%=so/%)

#*---------------------------------------------------------------------*/
#*    do                                                               */
#*---------------------------------------------------------------------*/
do: $(SOFILES) lib/config.@SO@ ChangeLog
	@ echo "Compilation complete."

#*---------------------------------------------------------------------*/
#*    .suffixes                                                        */
#*---------------------------------------------------------------------*/
.SUFFIXES:
.SUFFIXES: .js .hop .@SO@

#*---------------------------------------------------------------------*/
#*    The implicit rules                                               */
#*---------------------------------------------------------------------*/
%.@SO@: %.js
	$(HOPC) $(HFLAGS) --safe -y -o $@ $< 

%.@SO@: %.hop
	$(HOPC) $(HFLAGS) --safe -y -o $@ $< 

#*---------------------------------------------------------------------*/
#*    install                                                          */
#*---------------------------------------------------------------------*/
install: install-hiphop
	cd $(DESTDIR)$(HOPLIBDIR)/hop/$(HOPVERSION)/node_modules; ln -s $(DESTDIR)$(LIBDIR)/$(HZ)/$(HZVERSION) $(HZ)

install-hiphop: install-so
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/lib
	cp $(LIB:%=lib/%) $(DESTDIR)$(HIPHOPLIBDIR)/lib
	cp lib/config.js $(DESTDIR)$(HIPHOPLIBDIR)/lib
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor
	cp $(PREPROCESSOR:%=preprocessor/%) $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/ulib
	cp $(ULIB:%=ulib/%) $(DESTDIR)$(HIPHOPLIBDIR)/ulib
	cp package.json $(DESTDIR)$(HIPHOPLIBDIR)
	chmod -R a+rx $(DESTDIR)$(LIBDIR)/$(HZ)
	find $(DESTDIR)$(HIPHOPLIBDIR) -name '*.@SO@' -exec touch {} \;
	echo "Installation complete [$(DESTDIR)$(HIPHOPLIBDIR)]."

install-so:
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/lib/$(SODIR)
	for p in $(LIB:%.js=%) config; do \
	   cp lib/$$p.@SO@ $(DESTDIR)$(HIPHOPLIBDIR)/lib/$(SODIR); \
        done
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/ulib/$(SODIR)
	for p in $(ULIB:%.js=%); do \
	   cp ulib/$$p.@SO@ $(DESTDIR)$(HIPHOPLIBDIR)/ulib/$(SODIR); \
        done
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor/$(SODIR)
	for p in $(JSPREPROCESSOR:%.js=%); do \
	   cp preprocessor/$$p.@SO@ $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor/$(SODIR); \
        done
	for p in $(HOPPREPROCESSOR:%.hop=%); do \
	   cp preprocessor/$$p.@SO@ $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor/$/$(SODIR); \
        done

#*---------------------------------------------------------------------*/
#*    clean                                                            */
#*---------------------------------------------------------------------*/
clean:
	rm -rf lib/*.so
	rm -rf ulib/*.so
	rm -rf preprocessor/*.so

cleanall: clean
	rm -f config.status
	rm -f lib/config.js
	rm -rf arch/debian/debian

distclean: cleanall

#*---------------------------------------------------------------------*/
#*    hz                                                               */
#*---------------------------------------------------------------------*/
.PHONY: distrib tgz hz

distrib: hz
hz: tgz
tgz: $(HOPREPOSITORY)/$(HZ)-$(HZVERSION).tar.gz

$(HOPREPOSITORY)/$(HZ)-$(HZVERSION).tar.gz: \
  package.json \
  package-lock.json \
  node_modules \
  configure \
  Makefile.in Makefile \
  lib/config.js.in \
  $(OBJECTS) \
  $(FILES) \
  LICENSE \
  arch \
  docker \
  etc \
  doc \
  .travis.yml.in \
  tests \
  examples \
  ChangeLog
	mkdir -p $(HOPREPOSITORY) && \
	(cd ..; \
	 cp -r $(HZ) $(HZ)-$(HZVERSION); \
         tar cvfz $@ \
             --exclude='$(HZ)/private' \
             --exclude=.gitignore \
             --exclude=.git \
             --exclude=so \
             --exclude=arch/debian/build.$(HZ) \
             --exclude='*~' $(^:%=$(HZ)-$(HZVERSION)/%); \
         rm -rf $(HZ)-$(HZVERSION))

#*---------------------------------------------------------------------*/
#*    ChangeLog                                                        */
#*---------------------------------------------------------------------*/
ChangeLog:
	git log --pretty=format:"hiphop ($(HZVERSION)-1) unstable; urgency=low%n%n  * %s%n%n -- %an <%ae>  %cD%n" > ChangeLog
















